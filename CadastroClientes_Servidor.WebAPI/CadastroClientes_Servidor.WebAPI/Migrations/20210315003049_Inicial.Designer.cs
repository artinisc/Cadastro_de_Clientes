// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjetoTeste.Data;

namespace CadastroClientes_Servidor.WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210315003049_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ProjetoTeste.Model.Endereco", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("ProjetoTeste.Model.UsuarioCliente", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.HasKey("UsuarioId", "ClienteId");

                    b.HasIndex("ClienteId");

                    b.ToTable("UsuariosClientes");
                });

            modelBuilder.Entity("ProjetoTeste.model.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ProjetoTeste.model.Telefone", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<int?>("Usuarioid")
                        .HasColumnType("integer");

                    b.Property<int>("ddd")
                        .HasColumnType("integer");

                    b.Property<int>("numero")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.HasIndex("Usuarioid");

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("ProjetoTeste.model.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<string>("senha")
                        .HasColumnType("text");

                    b.Property<string>("usuario")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProjetoTeste.Model.Endereco", b =>
                {
                    b.HasOne("ProjetoTeste.model.Cliente", "Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("ProjetoTeste.Model.Endereco", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ProjetoTeste.Model.UsuarioCliente", b =>
                {
                    b.HasOne("ProjetoTeste.model.Cliente", "Cliente")
                        .WithMany("UsuariosClientes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoTeste.model.Usuario", "Usuario")
                        .WithMany("UsuariosClientes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjetoTeste.model.Telefone", b =>
                {
                    b.HasOne("ProjetoTeste.model.Cliente", "Cliente")
                        .WithOne("Telefone")
                        .HasForeignKey("ProjetoTeste.model.Telefone", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoTeste.model.Usuario", null)
                        .WithMany("Telefones")
                        .HasForeignKey("Usuarioid");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ProjetoTeste.model.Cliente", b =>
                {
                    b.Navigation("Endereco");

                    b.Navigation("Telefone");

                    b.Navigation("UsuariosClientes");
                });

            modelBuilder.Entity("ProjetoTeste.model.Usuario", b =>
                {
                    b.Navigation("Telefones");

                    b.Navigation("UsuariosClientes");
                });
#pragma warning restore 612, 618
        }
    }
}
